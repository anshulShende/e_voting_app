{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport voting from '../Ethereum/voting';\nimport { Card, Grid, Button, Table, Popup } from 'semantic-ui-react';\nimport { Link, Router } from '../routes';\nimport RequestRow from '../Components/RequestRow';\nimport axios from 'axios';\nimport web3 from '../Ethereum/web3';\nvar number = 4;\n\nvar votingInstance = /*#__PURE__*/function (_Component) {\n  _inherits(votingInstance, _Component);\n\n  var _super = _createSuper(votingInstance);\n\n  function votingInstance() {\n    var _this;\n\n    _classCallCheck(this, votingInstance);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      message: '',\n      Loading: false,\n      errorMessage: '',\n      addLoading: false,\n      isButtonDisabled: false,\n      popupContent: 'Click this button to add candidates'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddCandidates\", function _callee(event) {\n      var accounts, res, i;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.state.isButtonDisabled) {\n                _context.next = 29;\n                break;\n              }\n\n              event.preventDefault();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/candidates/\".concat(_this.props.locale)));\n\n            case 7:\n              res = _context.sent;\n              console.log(res.data);\n              console.log(accounts[0]);\n              i = 0;\n\n            case 11:\n              if (!(i < res.data.length)) {\n                _context.next = 26;\n                break;\n              }\n\n              _context.prev = 12;\n\n              _this.setState({\n                addLoading: true,\n                errorMessage: ''\n              });\n\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(voting.methods.addCandidate(res.data[i].name, res.data[i].partyName).send({\n                from: accounts[0]\n              }));\n\n            case 16:\n              Router.pushRoute(\"/\".concat(_this.props.locale));\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](12);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 22:\n              _this.setState({\n                addLoading: false\n              });\n\n            case 23:\n              i++;\n              _context.next = 11;\n              break;\n\n            case 26:\n              _this.setState({\n                isButtonDisabled: true\n              });\n\n              _context.next = 30;\n              break;\n\n            case 29:\n              _this.setState({\n                popupContent: 'The Candidates have been added'\n              });\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[12, 19]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function _callee2(event) {\n      var res, largest, index, i, winningCandidate;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              console.log(_this.props.locale);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/candidates/\".concat(_this.props.locale)));\n\n            case 4:\n              res = _context2.sent;\n              console.log(res.data);\n              largest = 0;\n\n              for (i = 0; i < _this.props.number; i++) {\n                if (_this.props.candidates[i].voteCount > largest) {\n                  largest = _this.props.candidates[i].voteCount;\n                  index = i;\n                }\n              }\n\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(voting.methods.candidates(index).call());\n\n            case 10:\n              winningCandidate = _context2.sent;\n              console.log(winningCandidate);\n\n              _this.setState({\n                message: winningCandidate[0] + \" belonging to the party \" + winningCandidate[1] + \" has won with \" + winningCandidate[2] + \" votes \"\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(votingInstance, [{\n    key: \"renderRow\",\n    value: function renderRow() {\n      return this.props.candidates.map(function (candidate, index) {\n        return __jsx(RequestRow, {\n          key: index,\n          id: index,\n          candidate: candidate\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        floated: \"left\",\n        width: 8\n      }, __jsx(Card, {\n        fluid: true\n      }, __jsx(Card.Content, null, __jsx(Card.Header, null, this.props.address), __jsx(Card.Meta, null, \"Election Address And Number of Candidates : \", this.props.number), __jsx(Card.Description, null, \"This the Address on which the Election Contract has been deployed\")))), __jsx(Grid.Column, {\n        floated: \"right\",\n        width: 2\n      }, __jsx(Link, {\n        route: \"/\".concat(this.props.locale, \"/votingTable\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"Voter's Info\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Popup, {\n        content: this.state.popupContent,\n        on: \"click\",\n        pinned: true,\n        trigger: __jsx(Button, {\n          primary: true,\n          icon: \"add circle\",\n          content: \"Add Candidate\",\n          onClick: this.onAddCandidates,\n          loading: this.state.addLoading\n        })\n      }), __jsx(Link, {\n        route: \"/\".concat(this.props.locale, \"/vote\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        floated: \"right\",\n        primary: true\n      }, \"Go to Vote\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Table, {\n        celled: true,\n        textAlign: \"center\"\n      }, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"Candidate's ID\"), __jsx(HeaderCell, null, \"Candidate's Name\"), __jsx(HeaderCell, null, \"Candidate's Party\"), __jsx(HeaderCell, null, \"Count\"))), __jsx(Body, null, this.renderRow())))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Button, {\n        primary: true,\n        loading: this.state.Loading,\n        onClick: this.onClick\n      }, \"Pick a Winner\"))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"h3\", null, this.state.message)))));\n    }\n  }]);\n\n  return votingInstance;\n}(Component);\n\n_defineProperty(votingInstance, \"getInitialProps\", function _callee3(props) {\n  var numCandidates, locale, candidates;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(voting.methods.getNumCandidate().call());\n\n        case 2:\n          numCandidates = _context3.sent;\n          locale = props.query.locale;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(numCandidates)).fill().map(function (element, index) {\n            return voting.methods.candidates(index).call();\n          })));\n\n        case 6:\n          candidates = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            address: voting.options.address,\n            number: numCandidates,\n            candidates: candidates,\n            locale: locale\n          });\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\n\nexport default votingInstance;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/e_voting_app/Voting App/pages/index.js"],"names":["React","Component","Layout","voting","Card","Grid","Button","Table","Popup","Link","Router","RequestRow","axios","web3","number","votingInstance","message","Loading","errorMessage","addLoading","isButtonDisabled","popupContent","event","state","preventDefault","eth","getAccounts","accounts","get","props","locale","res","console","log","data","i","length","setState","methods","addCandidate","name","partyName","send","from","pushRoute","largest","candidates","voteCount","index","call","winningCandidate","map","candidate","Header","Row","HeaderCell","Body","address","onAddCandidates","renderRow","onClick","getNumCandidate","numCandidates","query","Promise","all","Array","parseInt","fill","element","options"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../Components/Layout'\r\nimport voting from '../Ethereum/voting'\r\nimport {Card, Grid, Button, Table, Popup} from 'semantic-ui-react'\r\nimport {Link, Router} from '../routes';\r\nimport RequestRow from '../Components/RequestRow'\r\nimport axios from 'axios';\r\nimport web3 from '../Ethereum/web3'\r\n\r\nconst number = 4;\r\n\r\nclass votingInstance extends Component{\r\n\r\n    state ={\r\n        message : '',\r\n        Loading : false,\r\n        errorMessage : '',\r\n        addLoading : false,\r\n        isButtonDisabled : false,\r\n        popupContent : 'Click this button to add candidates'\r\n    }\r\n\r\n    static getInitialProps = async (props) =>{\r\n\r\n        const numCandidates = await voting.methods.getNumCandidate().call();\r\n        const locale = props.query.locale;\r\n        \r\n        const candidates = await Promise.all(\r\n            Array(parseInt(numCandidates))\r\n            .fill()\r\n            .map((element, index) =>{\r\n                return voting.methods.candidates(index).call()\r\n            })\r\n        )\r\n\r\n        return{\r\n            address : voting.options.address,\r\n            number : numCandidates,\r\n            candidates : candidates,\r\n            locale : locale\r\n        }\r\n    }\r\n\r\n    renderRow(){\r\n        return this.props.candidates.map((candidate,index) =>{\r\n            return <RequestRow \r\n                key = {index}\r\n                id = {index}\r\n                candidate  = {candidate}\r\n            />\r\n        });\r\n    }\r\n\r\n    onAddCandidates = async(event) =>{\r\n\r\n        if(!this.state.isButtonDisabled){\r\n            event.preventDefault();\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n            const res = await axios.get(`http://localhost:5000/candidates/${this.props.locale}`);\r\n            console.log(res.data)\r\n            console.log(accounts[0]);\r\n            \r\n            for( var i = 0; i < res.data.length; i++ ){\r\n                try{\r\n                    this.setState({addLoading : true, errorMessage : ''})\r\n                    await voting.methods.addCandidate(res.data[i].name,res.data[i].partyName)\r\n                    .send({from : accounts[0]})\r\n                    Router.pushRoute(`/${this.props.locale}`);\r\n                } catch(err){\r\n                    this.setState({errorMessage : err.message})\r\n                }\r\n                this.setState({addLoading : false})\r\n            }     \r\n            this.setState({isButtonDisabled : true})\r\n        }\r\n        else{\r\n            this.setState({popupContent : 'The Candidates have been added'})\r\n        }\r\n        \r\n    }\r\n\r\n    onClick = async(event) =>{\r\n        event.preventDefault();\r\n\r\n        console.log(this.props.locale);\r\n\r\n        const res = await axios.get(`http://localhost:5000/candidates/${this.props.locale}`)\r\n        console.log(res.data);\r\n        \r\n        var largest = 0;\r\n        var index;\r\n\r\n        for ( var i = 0 ; i < this.props.number ; i++ ){\r\n            \r\n            if(this.props.candidates[i].voteCount > largest){\r\n                largest = this.props.candidates[i].voteCount;\r\n                index = i;\r\n            }\r\n            \r\n        }\r\n\r\n        const winningCandidate = await voting.methods.candidates(index).call();\r\n        console.log(winningCandidate);\r\n        this.setState({message : winningCandidate[0] + \" belonging to the party \" + winningCandidate[1] + \" has won with \" + winningCandidate[2] + \" votes \"})\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const { Header,Row, HeaderCell, Body } = Table; \r\n        return(\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column floated = \"left\" width = {8}>\r\n                            <Card fluid>\r\n                                <Card.Content >\r\n                                    <Card.Header>{this.props.address}</Card.Header>\r\n                                    <Card.Meta>Election Address And Number of Candidates : {this.props.number}</Card.Meta>\r\n                                    <Card.Description>This the Address on which the Election Contract has been deployed</Card.Description>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Grid.Column>\r\n                        <Grid.Column floated = 'right' width = {2}>\r\n                                <Link route = {`/${this.props.locale}/votingTable`}>\r\n                                    <a>\r\n                                        <Button primary>Voter's Info</Button>\r\n                                    </a>\r\n                                </Link>\r\n                            </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Popup\r\n                                content = {this.state.popupContent}\r\n                                on = \"click\"\r\n                                pinned\r\n                                trigger = {<Button \r\n                                    primary \r\n                                    icon = \"add circle\"\r\n                                    content = \"Add Candidate\"\r\n                                    onClick = {this.onAddCandidates}\r\n                                    loading = {this.state.addLoading}\r\n                                    />}\r\n                            />\r\n                            <Link route = {`/${this.props.locale}/vote`}>\r\n                                <a>\r\n                                    <Button  floated = \"right\" primary>Go to Vote</Button>    \r\n                                </a>\r\n                            </Link>\r\n                            \r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Table celled textAlign = \"center\">\r\n                                <Header>\r\n                                    <Row>\r\n                                        <HeaderCell>Candidate's ID</HeaderCell>\r\n                                        <HeaderCell>Candidate's Name</HeaderCell>\r\n                                        <HeaderCell>Candidate's Party</HeaderCell>\r\n                                        <HeaderCell>Count</HeaderCell>\r\n                                    </Row>\r\n                                </Header>\r\n                                <Body>\r\n                                    {this.renderRow()}\r\n                                </Body>\r\n                            </Table>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Button \r\n                                primary \r\n                                loading = {this.state.Loading} \r\n                                onClick = {this.onClick}\r\n                            >\r\n                                Pick a Winner\r\n                            </Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <h3>{this.state.message}</h3>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>    \r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default votingInstance;"]},"metadata":{},"sourceType":"module"}