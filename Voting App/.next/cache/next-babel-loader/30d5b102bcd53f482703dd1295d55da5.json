{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport { Link } from '../routes';\nimport { Grid, Card, Form, Button, Message } from 'semantic-ui-react';\nimport voting from '../Ethereum/voting';\n\nclass votingPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"states\", {\n      index: '',\n      Loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(this, \"renderCandidates\", () => {\n      const items = this.props.candidates.map((candidate, index) => {\n        return {\n          header: candidate.name,\n          meta: index,\n          description: candidate.partyName\n        };\n      });\n      return __jsx(Card.Group, {\n        textAlign: \"center\",\n        centered: true,\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async ev => {\n      try {\n        await voting.methods.vote(this.state.index).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          index: err.message\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n      route: \"/\"\n    }, __jsx(\"a\", null, \"Homepage\")))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.renderCandidates())), __jsx(Grid.Row, null, __jsx(Grid.column, null, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Feild, null, __jsx(\"label\", null, \"Enter The Voting Index\"), __jsx(Input, {\n      value: this.state.index,\n      onChange: event => this.setState({\n        index: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      primary: true,\n      loading: \"false\"\n    }, \"Vote\"))))));\n  }\n\n}\n\n_defineProperty(votingPage, \"getInitialProps\", async props => {\n  const numCandidates = await voting.methods.getNumCandidate().call();\n  const candidates = await Promise.all(Array(parseInt(numCandidates)).fill().map((element, index) => {\n    return voting.methods.candidates(index).call();\n  }));\n  return {\n    numCandidates: numCandidates,\n    candidates: candidates\n  };\n});\n\nexport default votingPage;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/Voting App/pages/vote.js"],"names":["React","Component","Layout","Link","Grid","Card","Form","Button","Message","voting","votingPage","index","Loading","errorMessage","items","props","candidates","map","candidate","header","name","meta","description","partyName","ev","methods","vote","state","send","from","accounts","err","setState","message","render","renderCandidates","onSubmit","event","target","value","numCandidates","getNumCandidate","call","Promise","all","Array","parseInt","fill","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../Components/Layout'\r\nimport {Link} from '../routes'\r\nimport { Grid, Card, Form, Button, Message } from 'semantic-ui-react'\r\nimport voting from '../Ethereum/voting'\r\n\r\nclass votingPage extends Component {\r\n\r\n    states = {\r\n        index : '',\r\n        Loading : false,\r\n        errorMessage : ''\r\n    }\r\n\r\n    static getInitialProps = async (props) =>{\r\n\r\n        const numCandidates = await voting.methods.getNumCandidate().call()\r\n\r\n        const candidates = await Promise.all(\r\n            Array(parseInt(numCandidates))\r\n            .fill()\r\n            .map((element,index) =>{\r\n                return voting.methods.candidates(index).call()\r\n            })\r\n        )\r\n\r\n        return {\r\n            numCandidates : numCandidates,\r\n            candidates : candidates,\r\n        }\r\n    }\r\n\r\n    renderCandidates = () =>{\r\n        const items =  this.props.candidates.map((candidate,index) =>{\r\n            return{\r\n                header : candidate.name,\r\n                meta : index,\r\n                description : candidate.partyName\r\n            }\r\n        });\r\n\r\n        return <Card.Group textAlign = \"center\" centered items = {items} />\r\n    }\r\n\r\n    onSubmit = async(ev) =>{\r\n        try{\r\n            await voting.methods.vote(this.state.index).send({\r\n                from : accounts[0]\r\n            })\r\n        }catch(err){\r\n            this.setState({index : err.message})\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route ='/'>\r\n                                <a>\r\n                                    Homepage\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {this.renderCandidates()}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.column>\r\n                            <Form onSubmit = {this.onSubmit} error = {!!this.state.errorMessage}>\r\n                                <Form.Feild>\r\n                                    <label>Enter The Voting Index</label>\r\n                                    <Input  \r\n                                        value = {this.state.index}\r\n                                        onChange = {event => this.setState({index : event.target.value})}\r\n                                    />\r\n                                </Form.Feild>\r\n                                <Message error header = \"Oops!\" content = {this.state.errorMessage} />\r\n                                <Button primary loading = 'false'>\r\n                                    Vote\r\n                                </Button>              \r\n                            </Form>\r\n                        </Grid.column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default votingPage"]},"metadata":{},"sourceType":"module"}