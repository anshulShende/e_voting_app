{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport { Link, Router } from '../routes';\nimport { Grid, Card, Input, Button, Message } from 'semantic-ui-react';\nimport voting from '../Ethereum/voting';\nimport web3 from '../Ethereum/web3';\n\nvar votingPage = /*#__PURE__*/function (_Component) {\n  _inherits(votingPage, _Component);\n\n  var _super = _createSuper(votingPage);\n\n  function votingPage() {\n    var _this;\n\n    _classCallCheck(this, votingPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      id: 0,\n      Loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCandidates\", function () {\n      var items = _this.props.candidates.map(function (candidate, index) {\n        return {\n          header: candidate.name,\n          meta: index,\n          description: candidate.partyName\n        };\n      });\n\n      return __jsx(Card.Group, {\n        textAlign: \"center\",\n        centered: true,\n        items: items\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts, transaction, timestamp;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 3:\n              accounts = _context.sent;\n\n              _this.setState({\n                Loading: true,\n                errorMessage: ''\n              });\n\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(voting.methods.vote(_this.state.id).send({\n                from: accounts[0]\n              }));\n\n            case 8:\n              transaction = _context.sent;\n              console.log(transaction.blockNumber);\n              timestamp = web3.eth.getBlock(trans); //Router.pushRoute(`/vote/${transaction}`)\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 16:\n              _this.setState({\n                Loading: false,\n                id: ''\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 13]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(votingPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/\"\n      }, __jsx(\"a\", null, \"Homepage\")))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.renderCandidates())), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Input, {\n        value: this.state.id,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            id: event.target.value\n          });\n        },\n        fluid: true\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Button, {\n        primary: true,\n        loading: this.state.Loading,\n        onClick: this.onSubmit\n      }, \"Vote\")))));\n    }\n  }]);\n\n  return votingPage;\n}(Component);\n\n_defineProperty(votingPage, \"getInitialProps\", function _callee2(props) {\n  var numCandidates, candidates;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(voting.methods.getNumCandidate().call());\n\n        case 2:\n          numCandidates = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(numCandidates)).fill().map(function (element, index) {\n            return voting.methods.candidates(index).call();\n          })));\n\n        case 5:\n          candidates = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            numCandidates: numCandidates,\n            candidates: candidates\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\n\nexport default votingPage;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/Voting App/pages/vote.js"],"names":["React","Component","Layout","Link","Router","Grid","Card","Input","Button","Message","voting","web3","votingPage","id","Loading","errorMessage","items","props","candidates","map","candidate","index","header","name","meta","description","partyName","event","preventDefault","eth","getAccounts","accounts","setState","methods","vote","state","send","from","transaction","console","log","blockNumber","timestamp","getBlock","trans","message","renderCandidates","target","value","onSubmit","getNumCandidate","call","numCandidates","Promise","all","Array","parseInt","fill","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../Components/Layout'\r\nimport {Link, Router} from '../routes'\r\nimport { Grid, Card, Input, Button, Message } from 'semantic-ui-react'\r\nimport voting from '../Ethereum/voting'\r\nimport web3 from '../Ethereum/web3'\r\n\r\nclass votingPage extends Component {\r\n\r\n    state = {\r\n        id : 0,\r\n        Loading : false,\r\n        errorMessage : ''\r\n    }\r\n\r\n    static getInitialProps = async (props) =>{\r\n\r\n        const numCandidates = await voting.methods.getNumCandidate().call()\r\n\r\n        const candidates = await Promise.all(\r\n            Array(parseInt(numCandidates))\r\n            .fill()\r\n            .map((element,index) =>{\r\n                return voting.methods.candidates(index).call()\r\n            })\r\n        )\r\n\r\n        return {\r\n            numCandidates : numCandidates,\r\n            candidates : candidates,\r\n        }\r\n    }\r\n\r\n    renderCandidates = () =>{\r\n        const items =  this.props.candidates.map((candidate,index) =>{\r\n            return{\r\n                header : candidate.name,\r\n                meta : index,\r\n                description : candidate.partyName\r\n            }\r\n        });\r\n\r\n        return <Card.Group textAlign = \"center\" centered items = {items} />\r\n    }\r\n    \r\n    onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        this.setState({Loading : true, errorMessage : ''})\r\n        try{\r\n            const transaction = await voting.methods.vote(this.state.id).send({from : accounts[0]})\r\n            console.log(transaction.blockNumber);\r\n            const timestamp = web3.eth.getBlock(trans)\r\n            //Router.pushRoute(`/vote/${transaction}`)\r\n        }catch(err){\r\n            this.setState({errorMessage : err.message})\r\n        }\r\n        \r\n        this.setState({Loading : false, id : ''})\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Layout>\r\n                <Grid textAlign = \"center\">\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route ='/'>\r\n                                <a>\r\n                                    Homepage\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {this.renderCandidates()}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Input \r\n                                value = {this.state.id}\r\n                                onChange = {event => this.setState({id : event.target.value})}\r\n                                fluid\r\n                            />\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Button primary loading = {this.state.Loading} onClick = {this.onSubmit}>\r\n                                Vote\r\n                            </Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default votingPage;"]},"metadata":{},"sourceType":"module"}