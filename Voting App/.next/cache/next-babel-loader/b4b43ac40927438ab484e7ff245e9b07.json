{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport voting from '../Ethereum/voting';\nimport { Card, Grid, Button, Table, Link } from 'semantic-ui-react';\n\nvar votingInstance = /*#__PURE__*/function (_Component) {\n  _inherits(votingInstance, _Component);\n\n  var _super = _createSuper(votingInstance);\n\n  function votingInstance() {\n    _classCallCheck(this, votingInstance);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(votingInstance, [{\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        floated: \"left\",\n        width: 8\n      }, __jsx(Card, {\n        fluid: true\n      }, __jsx(Card.Content, null, __jsx(Card.Header, null, this.props.address), __jsx(Card.Meta, null, \"Election Address\"), __jsx(Card.Description, null, \"This the Address on which the Election Contract has been deployed\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/candidates/new\"\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true,\n        icon: \"add\"\n      }, \"Add Candidate\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Table, {\n        celled: true,\n        textAlign: \"center\"\n      }, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"Candidate's ID\"), __jsx(HeaderCell, null, \"Candidate's Name\"), __jsx(HeaderCell, null, \"Candidate's Party\"))))))));\n    }\n  }]);\n\n  return votingInstance;\n}(Component);\n\n_defineProperty(votingInstance, \"getInitialProps\", function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            address: voting.options.address\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\n\nexport default votingInstance;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/Voting App/pages/index.js"],"names":["React","Component","Layout","voting","Card","Grid","Button","Table","Link","votingInstance","Header","Row","HeaderCell","Body","props","address","options"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,IAAnC,QAA8C,mBAA9C;;IAEMC,c;;;;;;;;;;;;;6BASM;AAAA,UAEIC,MAFJ,GAEqCH,KAFrC,CAEIG,MAFJ;AAAA,UAEWC,GAFX,GAEqCJ,KAFrC,CAEWI,GAFX;AAAA,UAEgBC,UAFhB,GAEqCL,KAFrC,CAEgBK,UAFhB;AAAA,UAE4BC,IAF5B,GAEqCN,KAFrC,CAE4BM,IAF5B;AAIJ,aACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,OAAO,EAAG,MAAvB;AAA8B,QAAA,KAAK,EAAI;AAAvC,SACI,MAAC,IAAD;AAAM,QAAA,KAAK;AAAX,SACI,MAAC,IAAD,CAAM,OAAN,QACI,MAAC,IAAD,CAAM,MAAN,QAAc,KAAKC,KAAL,CAAWC,OAAzB,CADJ,EAEI,MAAC,IAAD,CAAM,IAAN,2BAFJ,EAGI,MAAC,IAAD,CAAM,WAAN,4EAHJ,CADJ,CADJ,CADJ,CADJ,EAYI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAG;AAAd,SACI,iBACI,MAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,IAAI,EAAG;AAAvB,yBADJ,CADJ,CADJ,CADJ,CAZJ,EAsBI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI,MAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAc,QAAA,SAAS,EAAG;AAA1B,SACI,MAAC,MAAD,QACI,MAAC,GAAD,QACI,MAAC,UAAD,yBADJ,EAEI,MAAC,UAAD,2BAFJ,EAGI,MAAC,UAAD,4BAHJ,CADJ,CADJ,CADJ,CADJ,CAtBJ,CADJ,CADJ;AAwCH;;;;EArDwBd,S;;gBAAvBQ,c,qBAEuB;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEf;AACFM,YAAAA,OAAO,EAAGZ,MAAM,CAACa,OAAP,CAAeD;AADvB,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;;AAsD7B,eAAeN,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../Components/Layout'\r\nimport voting from '../Ethereum/voting'\r\nimport {Card, Grid, Button, Table, Link} from 'semantic-ui-react'\r\n\r\nclass votingInstance extends Component{\r\n\r\n    static getInitialProps = async () =>{\r\n\r\n        return{\r\n            address : voting.options.address\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const { Header,Row, HeaderCell, Body } = Table; \r\n\r\n        return(\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column floated = \"left\" width = {8}>\r\n                            <Card fluid>\r\n                                <Card.Content >\r\n                                    <Card.Header>{this.props.address}</Card.Header>\r\n                                    <Card.Meta>Election Address</Card.Meta>\r\n                                    <Card.Description>This the Address on which the Election Contract has been deployed</Card.Description>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route = '/candidates/new'>\r\n                                <a>\r\n                                    <Button primary icon = \"add\">Add Candidate</Button>\r\n                                </a>\r\n                            </Link>\r\n                            \r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Table celled textAlign = \"center\">\r\n                                <Header>\r\n                                    <Row>\r\n                                        <HeaderCell>Candidate's ID</HeaderCell>\r\n                                        <HeaderCell>Candidate's Name</HeaderCell>\r\n                                        <HeaderCell>Candidate's Party</HeaderCell>\r\n                                    </Row>\r\n                                </Header>\r\n                            </Table>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>    \r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default votingInstance;"]},"metadata":{},"sourceType":"module"}