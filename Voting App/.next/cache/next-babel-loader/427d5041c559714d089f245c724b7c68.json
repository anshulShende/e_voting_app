{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport voting from '../Ethereum/voting';\nimport Layout from '../Components/Layout';\nimport { Table, Grid, Button } from 'semantic-ui-react';\nimport { Link, Router } from '../routes';\nimport RequestVotingRow from '../Components/RequestVotingRow';\n\nclass VotingTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderRow\", () => {\n      return this.props.transactions.map((transaction, index) => {\n        return __jsx(RequestVotingRow, {\n          key: index,\n          id: index,\n          transaction: transaction\n        });\n      });\n    });\n\n    _defineProperty(this, \"endElection\", async event => {\n      event.preventDefault();\n      window.location.assign(\"http://localhost:4000/staff\");\n    });\n\n    _defineProperty(this, \"logOut\", async event => {\n      event.preventDefault();\n      window.location.replace(\"http://localhost:4000/election\");\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      HeaderCell,\n      Body,\n      Row\n    } = Table;\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n      route: `/${this.props.locale}`\n    }, __jsx(\"a\", null, \"Homepage\"))), __jsx(Grid.Column, {\n      floated: \"right\"\n    }, __jsx(Button, {\n      primary: true,\n      onClick: this.logOut\n    }, \"Logout\"))), __jsx(Grid.Row, null, __jsx(Button, {\n      primary: true,\n      floated: true,\n      onClick: this.endElection\n    }, \"End Election\"), __jsx(Table, {\n      celled: true,\n      textAlign: \"center\"\n    }, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"Id\"), __jsx(HeaderCell, null, \"Voter's Address\"), __jsx(HeaderCell, null, \"Transaction's Hash\"), __jsx(HeaderCell, null, \"Block's Number\"), __jsx(HeaderCell, null, \"Timestamp\"))), __jsx(Body, null, this.renderRow())))));\n  }\n\n}\n\n_defineProperty(VotingTable, \"getInitialProps\", async props => {\n  const locale = props.query.locale;\n  const numTransactions = await voting.methods.getNumberofTransactions().call();\n  const transactions = await Promise.all(Array(parseInt(numTransactions)).fill().map((element, index) => {\n    return voting.methods.transactions(index).call();\n  }));\n  return {\n    transactions: transactions,\n    numTransactions: numTransactions,\n    locale: locale\n  };\n});\n\nexport default VotingTable;","map":{"version":3,"sources":["/home/anshulshende/Desktop/Rait/e_voting_app/Voting App/pages/votingTable.js"],"names":["React","Component","voting","Layout","Table","Grid","Button","Link","Router","RequestVotingRow","VotingTable","props","transactions","map","transaction","index","event","preventDefault","window","location","assign","replace","render","Header","HeaderCell","Body","Row","locale","logOut","endElection","renderRow","query","numTransactions","methods","getNumberofTransactions","call","Promise","all","Array","parseInt","fill","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react' \nimport voting from '../Ethereum/voting'\nimport Layout from '../Components/Layout'\nimport {Table, Grid, Button} from 'semantic-ui-react'\nimport {Link, Router} from '../routes';\nimport RequestVotingRow from '../Components/RequestVotingRow'\n\nclass VotingTable extends Component{\n\n    static getInitialProps = async (props) =>{\n        \n        const locale = props.query.locale;\n        const numTransactions = await voting.methods.getNumberofTransactions().call()\n        const transactions = await Promise.all(\n            Array(parseInt(numTransactions))\n            .fill()\n            .map((element,index) => {\n                return voting.methods.transactions(index).call();\n            })\n        )\n\n        return{\n            transactions : transactions,\n            numTransactions : numTransactions,\n            locale : locale\n        }\n    }\n    \n    renderRow = () =>{\n        return this.props.transactions.map((transaction,index) =>{\n            return <RequestVotingRow \n                key = {index}\n                id = {index}\n                transaction = {transaction}\n            />\n        });\n    }\n\n    endElection = async (event) =>{\n        event.preventDefault();\n        window.location.assign(\"http://localhost:4000/staff\")\n    }\n\n    logOut = async (event) =>{\n        event.preventDefault();\n        window.location.replace(\"http://localhost:4000/election\")\n    }\n    \n\n    render(){\n\n        const { Header, HeaderCell, Body, Row } = Table;\n        return (\n            <Layout>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Link route = {`/${this.props.locale}`}>\n                                <a>\n                                    Homepage\n                                </a>\n                            </Link>\n                        </Grid.Column>\n                        <Grid.Column floated = \"right\">\n                            <Button primary onClick = {this.logOut}>Logout</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Button primary floated onClick = {this.endElection}>End Election</Button>\n                            <Table celled textAlign = \"center\">\n                                <Header>\n                                    <Row>\n                                        <HeaderCell>Id</HeaderCell>\n                                        <HeaderCell>Voter's Address</HeaderCell>\n                                        <HeaderCell>Transaction's Hash</HeaderCell>\n                                        <HeaderCell>Block's Number</HeaderCell>\n                                        <HeaderCell>Timestamp</HeaderCell>\n                                    </Row>\n                                </Header>\n                                <Body>\n                                    {this.renderRow()}\n                                </Body>\n                            </Table>\n                    </Grid.Row>\n                </Grid>\n            </Layout>\n        )\n    }\n}\n\nexport default VotingTable;"]},"metadata":{},"sourceType":"module"}