{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport voting from '../Ethereum/voting';\n\nclass VotingTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderRow\", () => {\n      return this.props.transactions.map((transaction, index) => {\n        e;\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"h3\", null, \"Fuck You Bitches \", this.props.numTransactions);\n  }\n\n}\n\n_defineProperty(VotingTable, \"getInitialProps\", async () => {\n  const numTransactions = await voting.methods.getNumberofTransactions().call();\n  const transactions = await Promise.all(Array(parseInt(numTransactions)).fill().map((element, index) => {\n    return voting.methods.transactions(index).call();\n  }));\n  return {\n    transactions: transactions,\n    numTransactions: numTransactions\n  };\n});\n\nexport default VotingTable;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/Voting App/pages/votingTable.js"],"names":["React","Component","Table","voting","VotingTable","props","transactions","map","transaction","index","e","render","numTransactions","methods","getNumberofTransactions","call","Promise","all","Array","parseInt","fill","element"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAmC;AAAA;AAAA;;AAAA,uCAqBnB,MAAK;AACb,aAAO,KAAKI,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,WAAD,EAAaC,KAAb,KAAsB;AACrDC,QAAAA,CAAC;AACJ,OAFM,CAAP;AAGH,KAzB8B;AAAA;;AA4B/BC,EAAAA,MAAM,GAAE;AACJ,WAAM,uCAAsB,KAAKN,KAAL,CAAWO,eAAjC,CAAN;AACH;;AA9B8B;;gBAA7BR,W,qBAEuB,YAAW;AAEhC,QAAMQ,eAAe,GAAG,MAAMT,MAAM,CAACU,OAAP,CAAeC,uBAAf,GAAyCC,IAAzC,EAA9B;AAEA,QAAMT,YAAY,GAAG,MAAMU,OAAO,CAACC,GAAR,CACvBC,KAAK,CAACC,QAAQ,CAACP,eAAD,CAAT,CAAL,CACCQ,IADD,GAECb,GAFD,CAEK,CAACc,OAAD,EAASZ,KAAT,KAAmB;AACpB,WAAON,MAAM,CAACU,OAAP,CAAeP,YAAf,CAA4BG,KAA5B,EAAmCM,IAAnC,EAAP;AACH,GAJD,CADuB,CAA3B;AASA,SAAM;AACFT,IAAAA,YAAY,EAAGA,YADb;AAEFM,IAAAA,eAAe,EAAGA;AAFhB,GAAN;AAIH,C;;AAcL,eAAeR,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {Table} from 'semantic-ui-react'\r\nimport voting from '../Ethereum/voting'\r\n\r\nclass VotingTable extends Component{\r\n\r\n    static getInitialProps = async () =>{\r\n\r\n        const numTransactions = await voting.methods.getNumberofTransactions().call()\r\n\r\n        const transactions = await Promise.all(\r\n            Array(parseInt(numTransactions))\r\n            .fill()\r\n            .map((element,index) => {\r\n                return voting.methods.transactions(index).call();\r\n            })\r\n        )\r\n\r\n\r\n        return{\r\n            transactions : transactions,\r\n            numTransactions : numTransactions\r\n        }\r\n    }\r\n\r\n    renderRow = () =>{\r\n        return this.props.transactions.map((transaction,index) =>{\r\n            e\r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        return<h3>Fuck You Bitches {this.props.numTransactions}</h3>\r\n    }\r\n}\r\n\r\nexport default VotingTable;"]},"metadata":{},"sourceType":"module"}