{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Table, Grid } from 'semantic-ui-react';\nimport voting from '../Ethereum/voting';\nimport Layout from '../Components/Layout';\n\nvar VotingTable = /*#__PURE__*/function (_Component) {\n  _inherits(VotingTable, _Component);\n\n  var _super = _createSuper(VotingTable);\n\n  function VotingTable() {\n    var _this;\n\n    _classCallCheck(this, VotingTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderRow\", function () {\n      return _this.props.transactions.map(function (transaction, index) {\n        return __jsx(RequestVotingRow, {\n          key: index,\n          transaction: transaction\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(VotingTable, [{\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body,\n          Row = Table.Row;\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/index\"\n      }, __jsx(\"a\", null, \"Homepage\")))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Table, {\n        textAlign: \"center\"\n      }, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"Id\"), __jsx(HeaderCell, null, \"Voter's Address\"), __jsx(HeaderCell, null, \"Block's Hash\"), __jsx(HeaderCell, null, \"Transaction's Hash\"), __jsx(HeaderCell, null, \"BlockHash\"), __jsx(HeaderCell, null, \"BlockHash\"))))))));\n    }\n  }]);\n\n  return VotingTable;\n}(Component);\n\n_defineProperty(VotingTable, \"getInitialProps\", function _callee() {\n  var numTransactions, transactions;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(voting.methods.getNumberofTransactions().call());\n\n        case 2:\n          numTransactions = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(numTransactions)).fill().map(function (element, index) {\n            return voting.methods.transactions(index).call();\n          })));\n\n        case 5:\n          transactions = _context.sent;\n          return _context.abrupt(\"return\", {\n            transactions: transactions,\n            numTransactions: numTransactions\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\n\nexport default VotingTable;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/Voting App/pages/votingTable.js"],"names":["React","Component","Table","Grid","voting","Layout","VotingTable","props","transactions","map","transaction","index","Header","HeaderCell","Body","Row","methods","getNumberofTransactions","call","numTransactions","Promise","all","Array","parseInt","fill","element"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEMC,W;;;;;;;;;;;;;;;;gEAoBU,YAAK;AACb,aAAO,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,UAACC,WAAD,EAAaC,KAAb,EAAsB;AACrD,eAAO,MAAC,gBAAD;AACH,UAAA,GAAG,EAAIA,KADJ;AAEH,UAAA,WAAW,EAAID;AAFZ,UAAP;AAIH,OALM,CAAP;AAMH,K;;;;;;;6BAGO;AAAA,UAEIE,MAFJ,GAEsCV,KAFtC,CAEIU,MAFJ;AAAA,UAEYC,UAFZ,GAEsCX,KAFtC,CAEYW,UAFZ;AAAA,UAEwBC,IAFxB,GAEsCZ,KAFtC,CAEwBY,IAFxB;AAAA,UAE8BC,GAF9B,GAEsCb,KAFtC,CAE8Ba,GAF9B;AAIJ,aACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAG;AAAd,SACI,4BADJ,CADJ,CADJ,CADJ,EAUI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI,MAAC,KAAD;AAAO,QAAA,SAAS,EAAG;AAAnB,SACI,MAAC,MAAD,QACI,MAAC,GAAD,QACI,MAAC,UAAD,aADJ,EAEI,MAAC,UAAD,0BAFJ,EAGI,MAAC,UAAD,uBAHJ,EAII,MAAC,UAAD,6BAJJ,EAKI,MAAC,UAAD,oBALJ,EAMI,MAAC,UAAD,oBANJ,CADJ,CADJ,CADJ,CADJ,CAVJ,CADJ,CADJ;AA+BH;;;;EAjEqBd,S;;gBAApBK,W,qBAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAESF,MAAM,CAACY,OAAP,CAAeC,uBAAf,GAAyCC,IAAzC,EAFT;;AAAA;AAEfC,UAAAA,eAFe;AAAA;AAAA,2CAIMC,OAAO,CAACC,GAAR,CACvBC,KAAK,CAACC,QAAQ,CAACJ,eAAD,CAAT,CAAL,CACCK,IADD,GAECf,GAFD,CAEK,UAACgB,OAAD,EAASd,KAAT,EAAmB;AACpB,mBAAOP,MAAM,CAACY,OAAP,CAAeR,YAAf,CAA4BG,KAA5B,EAAmCO,IAAnC,EAAP;AACH,WAJD,CADuB,CAJN;;AAAA;AAIfV,UAAAA,YAJe;AAAA,2CAYf;AACFA,YAAAA,YAAY,EAAGA,YADb;AAEFW,YAAAA,eAAe,EAAGA;AAFhB,WAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;;AAkE7B,eAAeb,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {Table, Grid} from 'semantic-ui-react'\r\nimport voting from '../Ethereum/voting'\r\nimport Layout from '../Components/Layout'\r\n\r\nclass VotingTable extends Component{\r\n\r\n    static getInitialProps = async () =>{\r\n\r\n        const numTransactions = await voting.methods.getNumberofTransactions().call()\r\n\r\n        const transactions = await Promise.all(\r\n            Array(parseInt(numTransactions))\r\n            .fill()\r\n            .map((element,index) => {\r\n                return voting.methods.transactions(index).call();\r\n            })\r\n        )\r\n\r\n        return{\r\n            transactions : transactions,\r\n            numTransactions : numTransactions\r\n        }\r\n    }\r\n\r\n    renderRow = () =>{\r\n        return this.props.transactions.map((transaction,index) =>{\r\n            return <RequestVotingRow \r\n                key = {index}\r\n                transaction = {transaction}\r\n            />\r\n        });\r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n        const { Header, HeaderCell, Body, Row } = Table;\r\n\r\n        return (\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route = '/index'>\r\n                                <a>\r\n                                    Homepage\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Table textAlign = 'center'>\r\n                                <Header>\r\n                                    <Row>\r\n                                        <HeaderCell>Id</HeaderCell>\r\n                                        <HeaderCell>Voter's Address</HeaderCell>\r\n                                        <HeaderCell>Block's Hash</HeaderCell>\r\n                                        <HeaderCell>Transaction's Hash</HeaderCell>\r\n                                        <HeaderCell>BlockHash</HeaderCell>\r\n                                        <HeaderCell>BlockHash</HeaderCell>\r\n                                    </Row>\r\n                                </Header>\r\n                            </Table>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VotingTable;"]},"metadata":{},"sourceType":"module"}