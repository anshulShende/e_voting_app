{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout';\nimport { Link } from '../routes';\nimport { Grid, Card, Form, Button, Message } from 'semantic-ui-react';\nimport voting from '../Ethereum/voting';\n\nvar votingPage = /*#__PURE__*/function (_Component) {\n  _inherits(votingPage, _Component);\n\n  var _super = _createSuper(votingPage);\n\n  function votingPage() {\n    var _this;\n\n    _classCallCheck(this, votingPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"states\", {\n      index: '',\n      Loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCandidates\", function () {\n      var items = _this.props.candidates.map(function (candidate, index) {\n        return {\n          header: candidate.name,\n          meta: index,\n          description: candidate.partyName\n        };\n      });\n\n      return __jsx(Card.Group, {\n        textAlign: \"center\",\n        centered: true,\n        items: items\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                Loading: true,\n                errorMessage: ''\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(voting.methods.vote(_this.state.index).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                index: _context.t0.message\n              });\n\n            case 10:\n              _this.setState({\n                Loading: false,\n                index: index\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 7]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(votingPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/\"\n      }, __jsx(\"a\", null, \"Homepage\")))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.renderCandidates())), __jsx(Grid.Row, null, __jsx(Grid.column, null, __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Feild, null, __jsx(\"label\", null, \"Enter The Voting Index\"), __jsx(Input, {\n        value: this.state.index,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            index: event.target.value\n          });\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        primary: true,\n        loading: \"false\"\n      }, \"Vote\"))))));\n    }\n  }]);\n\n  return votingPage;\n}(Component);\n\n_defineProperty(votingPage, \"getInitialProps\", function _callee2(props) {\n  var numCandidates, candidates;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(voting.methods.getNumCandidate().call());\n\n        case 2:\n          numCandidates = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(numCandidates)).fill().map(function (element, index) {\n            return voting.methods.candidates(index).call();\n          })));\n\n        case 5:\n          candidates = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            numCandidates: numCandidates,\n            candidates: candidates\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\n\nexport default votingPage;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/Voting App/pages/vote.js"],"names":["React","Component","Layout","Link","Grid","Card","Form","Button","Message","voting","votingPage","index","Loading","errorMessage","items","props","candidates","map","candidate","header","name","meta","description","partyName","event","preventDefault","setState","methods","vote","state","send","from","accounts","message","renderCandidates","onSubmit","target","value","getNumCandidate","call","numCandidates","Promise","all","Array","parseInt","fill","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../Components/Layout'\r\nimport {Link} from '../routes'\r\nimport { Grid, Card, Form, Button, Message } from 'semantic-ui-react'\r\nimport voting from '../Ethereum/voting'\r\n\r\nclass votingPage extends Component {\r\n\r\n    states = {\r\n        index : '',\r\n        Loading : false,\r\n        errorMessage : ''\r\n    }\r\n\r\n    static getInitialProps = async (props) =>{\r\n\r\n        const numCandidates = await voting.methods.getNumCandidate().call()\r\n\r\n        const candidates = await Promise.all(\r\n            Array(parseInt(numCandidates))\r\n            .fill()\r\n            .map((element,index) =>{\r\n                return voting.methods.candidates(index).call()\r\n            })\r\n        )\r\n\r\n        return {\r\n            numCandidates : numCandidates,\r\n            candidates : candidates,\r\n        }\r\n    }\r\n\r\n    renderCandidates = () =>{\r\n        const items =  this.props.candidates.map((candidate,index) =>{\r\n            return{\r\n                header : candidate.name,\r\n                meta : index,\r\n                description : candidate.partyName\r\n            }\r\n        });\r\n\r\n        return <Card.Group textAlign = \"center\" centered items = {items} />\r\n    }\r\n\r\n    onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n\r\n        this.setState({Loading : true, errorMessage : ''})\r\n\r\n        try{\r\n            await voting.methods.vote(this.state.index).send({\r\n                from : accounts[0]\r\n            })\r\n        }catch(err){\r\n            this.setState({index : err.message})\r\n        }\r\n        \r\n        this.setState({Loading : false, index})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route ='/'>\r\n                                <a>\r\n                                    Homepage\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {this.renderCandidates()}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.column>\r\n                            <Form onSubmit = {this.onSubmit} error = {!!this.state.errorMessage}>\r\n                                <Form.Feild>\r\n                                    <label>Enter The Voting Index</label>\r\n                                    <Input  \r\n                                        value = {this.state.index}\r\n                                        onChange = {event => this.setState({index : event.target.value})}\r\n                                    />\r\n                                </Form.Feild>\r\n                                <Message error header = \"Oops!\" content = {this.state.errorMessage} />\r\n                                <Button primary loading = 'false'>\r\n                                    Vote\r\n                                </Button>              \r\n                            </Form>\r\n                        </Grid.column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default votingPage"]},"metadata":{},"sourceType":"module"}