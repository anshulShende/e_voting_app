{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table, Grid } from 'semantic-ui-react';\nimport voting from '../Ethereum/voting';\nimport Layout from '../Components/Layout';\nimport { Link } from '../routes';\nimport RequestVotingRow from '../Components/';\n\nclass VotingTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderRow\", () => {\n      return this.props.transactions.map((transaction, index) => {\n        return __jsx(RequestVotingRow, {\n          key: index,\n          transaction: transaction\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      HeaderCell,\n      Body,\n      Row\n    } = Table;\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n      route: \"/\"\n    }, __jsx(\"a\", null, \"Homepage\")))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Table, {\n      textAlign: \"center\",\n      celled: true\n    }, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"Id\"), __jsx(HeaderCell, null, \"Voter's Address\"), __jsx(HeaderCell, null, \"Block's Hash\"), __jsx(HeaderCell, null, \"Transaction's Hash\"), __jsx(HeaderCell, null, \"Block's Number\"), __jsx(HeaderCell, null, \"Timestamp\"))), __jsx(Body, null, this.renderRow()))))));\n  }\n\n}\n\n_defineProperty(VotingTable, \"getInitialProps\", async () => {\n  const numTransactions = await voting.methods.getNumberofTransactions().call();\n  const transactions = await Promise.all(Array(parseInt(numTransactions)).fill().map((element, index) => {\n    return voting.methods.transactions(index).call();\n  }));\n  return {\n    transactions: transactions,\n    numTransactions: numTransactions\n  };\n});\n\nexport default VotingTable;","map":{"version":3,"sources":["C:/Users/mappa/Desktop/Project/Voting App/pages/votingTable.js"],"names":["React","Component","Table","Grid","voting","Layout","Link","RequestVotingRow","VotingTable","props","transactions","map","transaction","index","render","Header","HeaderCell","Body","Row","renderRow","numTransactions","methods","getNumberofTransactions","call","Promise","all","Array","parseInt","fill","element"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,OAAOC,gBAAP,MAA6B,gBAA7B;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAmC;AAAA;AAAA;;AAAA,uCAoBnB,MAAK;AACb,aAAO,KAAKQ,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,WAAD,EAAaC,KAAb,KAAsB;AACrD,eAAO,MAAC,gBAAD;AACH,UAAA,GAAG,EAAIA,KADJ;AAEH,UAAA,WAAW,EAAID;AAFZ,UAAP;AAIH,OALM,CAAP;AAMH,KA3B8B;AAAA;;AA8B/BE,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,UAAV;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA;AAA5B,QAAoChB,KAA1C;AACA,WACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG;AAAd,OACI,4BADJ,CADJ,CADJ,CADJ,EAUI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI,MAAC,KAAD;AAAO,MAAA,SAAS,EAAG,QAAnB;AAA4B,MAAA,MAAM;AAAlC,OACI,MAAC,MAAD,QACI,MAAC,GAAD,QACI,MAAC,UAAD,aADJ,EAEI,MAAC,UAAD,0BAFJ,EAGI,MAAC,UAAD,uBAHJ,EAII,MAAC,UAAD,6BAJJ,EAKI,MAAC,UAAD,yBALJ,EAMI,MAAC,UAAD,oBANJ,CADJ,CADJ,EAWI,MAAC,IAAD,QACK,KAAKiB,SAAL,EADL,CAXJ,CADJ,CADJ,CAVJ,CADJ,CADJ;AAkCH;;AAnE8B;;gBAA7BX,W,qBAEuB,YAAW;AAEhC,QAAMY,eAAe,GAAG,MAAMhB,MAAM,CAACiB,OAAP,CAAeC,uBAAf,GAAyCC,IAAzC,EAA9B;AACA,QAAMb,YAAY,GAAG,MAAMc,OAAO,CAACC,GAAR,CACvBC,KAAK,CAACC,QAAQ,CAACP,eAAD,CAAT,CAAL,CACCQ,IADD,GAECjB,GAFD,CAEK,CAACkB,OAAD,EAAShB,KAAT,KAAmB;AACpB,WAAOT,MAAM,CAACiB,OAAP,CAAeX,YAAf,CAA4BG,KAA5B,EAAmCU,IAAnC,EAAP;AACH,GAJD,CADuB,CAA3B;AAQA,SAAM;AACFb,IAAAA,YAAY,EAAGA,YADb;AAEFU,IAAAA,eAAe,EAAGA;AAFhB,GAAN;AAIH,C;;AAqDL,eAAeZ,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {Table, Grid} from 'semantic-ui-react'\r\nimport voting from '../Ethereum/voting'\r\nimport Layout from '../Components/Layout'\r\nimport {Link} from '../routes';\r\nimport RequestVotingRow from '../Components/'\r\n\r\nclass VotingTable extends Component{\r\n\r\n    static getInitialProps = async () =>{\r\n\r\n        const numTransactions = await voting.methods.getNumberofTransactions().call()\r\n        const transactions = await Promise.all(\r\n            Array(parseInt(numTransactions))\r\n            .fill()\r\n            .map((element,index) => {\r\n                return voting.methods.transactions(index).call();\r\n            })\r\n        )\r\n\r\n        return{\r\n            transactions : transactions,\r\n            numTransactions : numTransactions\r\n        }\r\n    }\r\n\r\n    \r\n    renderRow = () =>{\r\n        return this.props.transactions.map((transaction,index) =>{\r\n            return <RequestVotingRow \r\n                key = {index}\r\n                transaction = {transaction}\r\n            />\r\n        });\r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n        const { Header, HeaderCell, Body, Row } = Table;\r\n        return (\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route = '/'>\r\n                                <a>\r\n                                    Homepage\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Table textAlign = 'center' celled>\r\n                                <Header>\r\n                                    <Row>\r\n                                        <HeaderCell>Id</HeaderCell>\r\n                                        <HeaderCell>Voter's Address</HeaderCell>\r\n                                        <HeaderCell>Block's Hash</HeaderCell>\r\n                                        <HeaderCell>Transaction's Hash</HeaderCell>\r\n                                        <HeaderCell>Block's Number</HeaderCell>\r\n                                        <HeaderCell>Timestamp</HeaderCell>\r\n                                    </Row>\r\n                                </Header>\r\n                                <Body>\r\n                                    {this.renderRow()}\r\n                                </Body>\r\n                            </Table>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VotingTable;"]},"metadata":{},"sourceType":"module"}