{"version":3,"file":"static/webpack/static\\development\\pages\\votingTable.js.5178e1bf512fca93c835.hot-update.js","sources":["webpack:///./pages/votingTable.js"],"sourcesContent":["import React, { Component } from 'react' \r\nimport voting from '../Ethereum/voting'\r\nimport Layout from '../Components/Layout'\r\nimport {Table, Grid, Button} from 'semantic-ui-react'\r\nimport {Link, Router} from '../routes';\r\nimport RequestVotingRow from '../Components/RequestVotingRow'\r\n\r\nclass VotingTable extends Component{\r\n\r\n    static getInitialProps = async (props) =>{\r\n        \r\n        const locale = props.query.locale;\r\n        const numTransactions = await voting.methods.getNumberofTransactions().call()\r\n        const transactions = await Promise.all(\r\n            Array(parseInt(numTransactions))\r\n            .fill()\r\n            .map((element,index) => {\r\n                return voting.methods.transactions(index).call();\r\n            })\r\n        )\r\n\r\n        return{\r\n            transactions : transactions,\r\n            numTransactions : numTransactions,\r\n            locale : locale\r\n        }\r\n    }\r\n    \r\n    renderRow = () =>{\r\n        return this.props.transactions.map((transaction,index) =>{\r\n            return <RequestVotingRow \r\n                key = {index}\r\n                id = {index}\r\n                transaction = {transaction}\r\n            />\r\n        });\r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n        const { Header, HeaderCell, Body, Row } = Table;\r\n        return (\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Link route = {`/${this.props.locale}`}>\r\n                                <a>\r\n                                    Homepage\r\n                                </a>\r\n                            </Link>\r\n                        </Grid.Column>\r\n                        <Grid.Column floated = \"right\">\r\n                            <Button primary>Logout</Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Button primary floated onClick = {this}>End Election</Button>\r\n                            <Table celled textAlign = \"center\">\r\n                                <Header>\r\n                                    <Row>\r\n                                        <HeaderCell>Id</HeaderCell>\r\n                                        <HeaderCell>Voter's Address</HeaderCell>\r\n                                        <HeaderCell>Transaction's Hash</HeaderCell>\r\n                                        <HeaderCell>Block's Number</HeaderCell>\r\n                                        <HeaderCell>Timestamp</HeaderCell>\r\n                                    </Row>\r\n                                </Header>\r\n                                <Body>\r\n                                    {this.renderRow()}\r\n                                </Body>\r\n                            </Table>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VotingTable;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AAAA;AAMA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAkBA;;;;AAtEA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAQA;AACA;AACA;AAVA;AAIA;AAJA;AAaA;AACA;AACA;AAHA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsEA;;;;A","sourceRoot":""}